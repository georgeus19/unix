#!/bin/bash
do_help=no
waiting=0
ret_val=0
mkdir /tmp/asdlock
while [ $? -ne 0 ] ; do
        sleep 10
	waiting=$(($waiting+1))
	if [ $waiting -gt 4 ] ; then
		ret_val=6
	fi
        mkdir /tmp/asdlock
done

records=""
#todo_pwd=`echo $0 | sed 's=\(.*\)\(todo\)=\1=g'`
#todo_pwd=`echo $0`
#list="list"
todolist="$HOME/.todolist"
do_add="no"
touch $todolist
tmp_file="$HOME/.$$1"
tmp_file_del="$HOME/.$$2"
tmp_file_del2="$HOME/.$$3"
tmp_time_stamp="$HOME/.$$4"
tmp_dl_file="$HOME/.$$5"
tmp_deadline_tab="$HOME/.$$7"
echo_todolist="no"
to_delete=""
do_deadline="no"
add_deadline="no"
#touch $tmp_file_del2
#touch $tmp_file
#touch $tmp_file_del
while [ -n "$1" ] ; do
	case "$1" in
	--help)
		do_help=yes
		break
		;;
	-a)	#Adding records to todolist
		shift
		if [ -z "$1" ] ; then
                	echo "No record to add found" >&2
                        ret_val=1
                        break
                        fi
		number_records_add=`echo $1 | grep  "[0-9]"`
		number_records_add_number=`echo $1 | grep -o "[0-9]*"`
		if [[ "$number_records_add" != "$1" || $number_records_add != $number_records_add_number ]] ; then
			#echo $number_records_add
			#echo $number_records_add_number
			#echo $1
			number_records_add=1
		fi
		i=0
		printf "" > $tmp_file
		printf "" > $tmp_deadline_tab
		printf "" > $tmp_time_stamp
		while [ $i -lt  $number_records_add ] ; do 
			#If in $i is number of record to add, we need to shift to get the first record in $i
			if [[ $i -eq 0 && $number_records_add -gt 1 ]] ; then
				shift
			fi
			#If $1 is already the first record (=adding one record by default -a "txt"), we do not shift
			if [ $i -gt 0 ] ; then 
				shift
			fi
			record=`echo $1 | grep "^-"`
			#If there is the same count of records to add as in number_records_add, if not -> else branch
			if [[ -n "$1"  && -z $record ]] ; then
				do_add="yes"
				add_deadline="yes"
				#printf "" >> $tmp_time_stamp
				echo -e "\t\t" >> $tmp_deadline_tab
				date +%A:%D >> $tmp_time_stamp
				number_char_rec=`echo "$1" | wc -m`
                                if [ $number_char_rec -lt 9 ] ; then
                                	echo -e "$1\t\t\t" >> $tmp_file
                       		else
	                          	if [ $number_char_rec -lt 17 ] ; then
                                        	echo -e "$1\t\t" >> $tmp_file
                                       	else 
						if [ $number_char_rec -lt 25 ] ; then
                                	        	echo -e "$1\t" >> $tmp_file
						else
							echo -e "$1" >> $tmp_file
						fi
                                        fi
                                fi
				#echo "$1" >> $tmp_file 
			else
				echo "No record to add found" >&2
				ret_val=1
				break
			fi
			i=$(($i+1))
		done
		;;
	-w)
		echo_todolist="yes"
		;;
	-d)	#Deleting records from todolist
		shift
		arg=`echo $1 | grep "^-"`
		if [[ -n "$1" && -z "$arg" ]] ; then
			to_delete="$1"
		else
			ret_val=3
			echo "Wrong record-line-index format to delete" >&2
			break
		fi
		;;
	-t)	
		do_deadline="yes"
		printf "" > $tmp_dl_file
		number_deadline=0
		if [[ "$add_deadline" = "no" ]] ; then
			ret_val=4		
			echo "Wrong deadline format" >&2
			break
		else
			while [ $number_deadline -lt $number_records_add ] ; do
				shift
				tmp_deadline=`echo $1 | grep "^-"`
				if [[ -n "$1" && -z "$tmp_deadline" ]] ; then
					number_char=`echo "$1" | wc -m`
					if [ $number_char -lt 9 ] ; then
						echo -e "$1\t\t" >> $tmp_dl_file
					else
						if [ $number_char -lt 17 ] ; then
							echo -e "$1\t" >> $tmp_dl_file
						else 
							echo -e "$1" >> $tmp_dl_file
						fi
					fi
				else
					ret_val=4
		                        echo "Wrong deadline format" >&2
                		        break
				fi
				number_deadline=$(($number_deadline+1))
			done
		fi
		;;
	*)
		ret_val=2
		break
		;;
	esac
	shift
done
#if option --help was chosen
if [ "$do_help" = "yes" ] ; then
echo '
NAME:
        todo - Stores a line of text(=record) into a todolist(=file)
        to execute: path/todo [OPTIONS]
                    or if in the same dir: ./todo [OPTIONS]

OPTIONS:
        -a "record text"
                Add a record to the todolist(recommended max 31 chars).
                To add more than one record: -a numberofrecords ".." ".."
                Records cannot start with "-".

        -w
                Display todolist records.

        -d "number of a line of a record to delete"
                Delete a record from the todolist.
                To delete more than one record(number1>number2): -d number1,number2,...
                        -typing -d number2,number1,... would delete line number2 and line number1+1

        -t "deadline"
                Add a deadline to record which is to be added. -t must be chosen after -a(recommended max 23 chars).
                To add more deadlines to records: Add after -t "deadlineofaddedrecord1" "deadlineofaddedrecord2" etc..
'

	rm -f $tmp_file $tmp_time_stamp $tmp_file_del2 $tmp_file_del $tmp_deadline_tab $tmp_dl_file
	rmdir /tmp/asdlock
	exit $ret_val
fi
#If error in options occured
if [ $ret_val -gt 0 ] ; then
	echo 'try "./todo --help" for more information' >&2
	rm -f $tmp_file $tmp_time_stamp $tmp_file_del2 $tmp_file_del $tmp_deadline_tab $tmp_dl_file
	rmdir /tmp/asdlock
	exit $ret_val
fi
#Deleting records
if [ -n "$to_delete" ] ; then
	printf "" > $tmp_file_del
	printf "" > $tmp_file_del2
	cat $todolist > $tmp_file_del
	echo $to_delete | tr ',' '\n' > $tmp_file_del2
	while read line ; do
		cat $tmp_file_del | sed -e "$line"'d' > $todolist
		cat $todolist > $tmp_file_del
	done <$tmp_file_del2
	rm $tmp_file_del2 $tmp_file_del
fi
#Adding records to todolist and destroying temporary files
if [ "$do_add" = "yes" ] ; then
	tmp_dlfile="$HOME/.$$6"
	if [ "$do_deadline" = "yes" ] ; then
		touch $tmp_dlfile
		paste $tmp_file $tmp_dl_file > $tmp_dlfile
		cat $tmp_dlfile > $tmp_file
	else
		
		touch $tmp_dlfile
		paste $tmp_file $tmp_deadline_tab > $tmp_dlfile
		cat $tmp_dlfile > $tmp_file
	fi
	paste $tmp_file $tmp_time_stamp >> $todolist
	rm -f $tmp_file $tmp_time_stamp $tmp_deadline_tab $tmp_dl_file $tmp_dlfile
fi
#Displaying todolist on screen
if [ $echo_todolist = "yes" ] ; then
	#magic with colors
	NC='\033[0m'
	GREEN='\033[0;32m'
	echo -e "\t${GREEN}day added\t\t\tdeadline\t\trecords${NC}"
	cat -n $todolist
fi
rmdir /tmp/asdlock
